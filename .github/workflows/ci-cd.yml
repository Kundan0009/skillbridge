name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install Backend Dependencies
      run: |
        cd server
        npm ci
    
    - name: Run Backend Tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test
        MONGO_URI: mongodb://localhost:27017/skillbridge_test
        JWT_SECRET: test_secret_key
        GEMINI_API_KEY: test_key
    
    - name: Install Frontend Dependencies
      run: |
        cd client
        npm ci
    
    - name: Build Frontend
      run: |
        cd client
        npm run build

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Security Audit
      run: |
        cd server && npm audit --audit-level high
        cd ../client && npm audit --audit-level high

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Backend
      uses: docker/build-push-action@v5
      with:
        context: ./server
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/skillbridge-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and Push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/skillbridge-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy Success Notification
      run: |
        echo "ðŸš€ SkillBridge deployed successfully!"
        echo "Backend: ${{ secrets.DOCKER_USERNAME }}/skillbridge-backend:latest"
        echo "Frontend: ${{ secrets.DOCKER_USERNAME }}/skillbridge-frontend:latest"