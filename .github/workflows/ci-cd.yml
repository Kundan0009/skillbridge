name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Server Dependencies
      run: |
        cd server
        npm ci
    
    - name: Run Server Tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test
    
    - name: Install Client Dependencies
      run: |
        cd client
        npm ci
    
    - name: Run Client Tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install and Build Server
      run: |
        cd server
        npm ci
        npm run build --if-present
    
    - name: Install and Build Client
      run: |
        cd client
        npm ci
        npm run build
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          client/build/
          server/
        retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
    
    - name: Deploy to Production
      run: |
        echo "ðŸš€ Deploying to production..."
        echo "âœ… SkillBridge deployment ready"
        # Add your deployment commands here
        # Example: docker build and push, or deploy to cloud provider