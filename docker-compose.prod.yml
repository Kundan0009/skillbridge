version: '3.8'

services:
  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=${MONGO_URI}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - CLIENT_URL=${CLIENT_URL:-https://your-domain.com}
      - PORT=9000
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    restart: unless-stopped
    networks:
      - skillbridge-prod
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:9000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-https://api.your-domain.com}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - skillbridge-prod
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  skillbridge-prod:
    driver: overlay
    attachable: true

volumes:
  uploads_data:
    driver: local
  logs_data:
    driver: local